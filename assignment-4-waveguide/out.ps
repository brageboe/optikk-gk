%!PS-Adobe-3.0
%%Title: waveguide_multimode.py
%%For: brage
%%Creator: VIM - Vi IMproved 8.1 (2018 May 18)
%%CreationDate: Mon Oct 26 16:04:20 2020
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 59 49 564 800
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: A4
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/share/vim/vim81/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/share/vim/vim81/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
595 842 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(waveguide_multimode.py                                                        Page 1)59.5 792.4 ms
F0 sf
0.251 g
(#!/usr/bin/env python3)59.5 772.4 ms
(# -*- coding: utf-8 -*-)59.5 762.4 ms
0.498 0.498 0 r
(""")59.5 752.4 ms
(Created on Thu Oct 15 15:37:51 2020)59.5 742.4 ms
(@author: brage)59.5 722.4 ms
(""")59.5 712.4 ms
0.251 g
(########### SLAB WAVEGUIDE -- TM / TE ###########)59.5 702.4 ms
(# A waveguide simplified as a thin-film model   #)59.5 692.4 ms
(# coord.system: x:up; y:out-of-page; z:right    #)59.5 682.4 ms
(#                                               #)59.5 672.4 ms
(#   n_2                                         #)59.5 662.4 ms
(#  --------------------------------             #)59.5 652.4 ms
(#   n_1      wave--->       b                   #)59.5 642.4 ms
(#  --------------------------------             #)59.5 632.4 ms
(#   n_2                                         #)59.5 622.4 ms
(#                                               #)59.5 612.4 ms
(#################################################)59.5 602.4 ms
(#)59.5 592.4 ms
(# where n_1 > n_2 to ensure total internal reflection)59.5 582.4 ms
(# b = height of n_1 region )59.5 572.4 ms
(#)59.5 562.4 ms
(# Derivation of TE Mode Dispersion Relation and E_y can be found in lecture notes T8)59.5 552.4 ms
(C.pdf)59.5 542.4 ms
(# Derivation of TM Mode Dispersion Relation and H_y can be found in assignment submi)59.5 532.4 ms
(ssion Optikk_GK_Assignment_4.pdf)59.5 522.4 ms
0 0.498 0 r
(import)59.5 502.4 ms
0 g
( numpy )s
0.376 g
(as)s
0 g
( np)s
0 0.498 0 r
(import)59.5 492.4 ms
0 g
( matplotlib.pyplot )s
0.376 g
(as)s
0 g
( plt)s
0 0.498 0 r
(import)59.5 482.4 ms
0 g
( sys)s
0.376 g
(def)59.5 462.4 ms
0 g
( )s
F1 sf
0.188 0.188 0.498 r
(intersectionsAmount)s
F0 sf
0 g
(\(lhs, rhs, rhs_modes\):)s
(    )59.5 452.4 ms
0.251 g
(# returns the amount of intersections between rhs and lhs\(for a given b\))s
0 g
(    )59.5 442.4 ms
0.251 g
(# rhs_modes is decided by user in system constants)s
0 g
(    )59.5 432.4 ms
0.376 g
(if)s
0 g
( lhs[)s
0.498 0.498 0 r
(0)s
0 g
(] > rhs[)s
0.498 0.498 0 r
(0)s
0 g
(] + \(rhs_modes - )s
0.498 0.498 0 r
(1)s
0 g
(\) * np.pi:)s
(        )59.5 422.4 ms
0.376 g
(return)s
0 g
( rhs_modes)s
(    )59.5 412.4 ms
0.376 g
(else)s
0 g
(:)s
(        )59.5 402.4 ms
0.376 g
(return)s
0 g
( intersectionsAmount\(lhs, rhs, rhs_modes - )s
0.498 0.498 0 r
(1)s
0 g
(\))s
(P = )59.5 382.4 ms
0.498 0.498 0 r
(1000)s
0 g
(                                       )s
0.251 g
(# data points)s
(# SYSTEM CONSTANTS )59.5 362.4 ms
0 g
(pol = )59.5 352.4 ms
0.498 0.498 0 r
("TE")s
0 g
(                                      )s
0.251 g
(# polarization, either "TE" or "TM")s
0 g
(wl = )59.5 342.4 ms
0.498 0.498 0 r
(1.55)s
0 g
(                                       )s
0.251 g
(# wavelength, micrometers)s
0 g
(n_1 = )59.5 332.4 ms
0.498 0.498 0 r
(1.7)s
0 g
(                                       )s
0.251 g
(# inner material refractive index)s
0 g
(n_2 = )59.5 322.4 ms
0.498 0.498 0 r
(1.4)s
0 g
(                                       )s
0.251 g
(# outer material refractive index)s
0 g
(rhs_modes = )59.5 312.4 ms
0.498 0.498 0 r
(4)s
0 g
(                                   )s
0.251 g
(# number of modes m to plot of right)s
(-hand-side mode-relation eq)59.5 302.4 ms
(# system variables)59.5 282.4 ms
0 g
(bwl = np.arange\()59.5 272.4 ms
0.498 0.498 0 r
(.25)s
0 g
(, rhs_modes / )s
0.498 0.498 0 r
(2)s
0 g
(, )s
0.498 0.498 0 r
(.25)s
0 g
(\)        )s
0.251 g
(# b / wl)s
0 g
(N = np.linspace\(n_2 * )59.5 262.4 ms
0.498 0.498 0 r
(1.0001)s
0 g
(, n_1 * )s
0.498 0.498 0 r
(0.999)s
0 g
(, P\)   )s
0.251 g
(# Effective refractive index; avoid )s
(divide by zero)59.5 252.4 ms
0 g
(beta = )59.5 242.4 ms
0.498 0.498 0 r
(2)s
0 g
( * np.pi * N / wl                       )s
0.251 g
(# propagation constant)s
0.376 g
(if)59.5 222.4 ms
0 g
( pol != )s
0.498 0.498 0 r
("TE")s
0 g
( and pol != )s
0.498 0.498 0 r
("TM")s
0 g
(:)s
(    sys.exit\()59.5 212.4 ms
0.498 0.498 0 r
("Make sure parameter pol is _exactly_ equal to either TE or TM!")s
0 g
(\))s
0.251 g
(############### MODE DISPERSION ###############)59.5 192.4 ms
0 g
(MD_lhs = []                                     )59.5 182.4 ms
0.251 g
(# left-hand-side of mode dispersion )s
(equation)59.5 172.4 ms
0.376 g
(for)59.5 162.4 ms
0 g
( i in bwl:                                   )s
0.251 g
(# calculate for various b/wl)s
0 g
(    MD_lhs.append\(np.sqrt\(n_1**)59.5 152.4 ms
0.498 0.498 0 r
(2)s
0 g
( - N**)s
0.498 0.498 0 r
(2)s
0 g
(\) * )s
0.498 0.498 0 r
(2)s
0 g
( * np.pi * i\))s
0.376 g
(if)59.5 142.4 ms
0 g
( pol == )s
0.498 0.498 0 r
("TM")s
0 g
(:)s
(    MD_rhs = )59.5 132.4 ms
0.498 0.498 0 r
(2)s
0 g
( * np.arctan\( \(n_1 / n_2\)**)s
0.498 0.498 0 r
(2)s
0 g
( * np.sqrt\(\(N**)s
0.498 0.498 0 r
(2)s
0 g
( - n_2**)s
0.498 0.498 0 r
(2)s
0 g
(\) / \(n_1**)s
0.498 0.498 0 r
(2)s
0 g
( - N**)s
0.498 0.498 0 r
(2)59.5 122.4 ms
0 g
(\)\)\) )s
0.251 g
(# right hand side, valid for any multiplum of pi)s
0.376 g
(elif)59.5 112.4 ms
0 g
( pol == )s
0.498 0.498 0 r
("TE")s
0 g
(:)s
(    MD_rhs = )59.5 102.4 ms
0.498 0.498 0 r
(2)s
0 g
( * np.arctan\(np.sqrt\(\(N**)s
0.498 0.498 0 r
(2)s
0 g
( - n_2**)s
0.498 0.498 0 r
(2)s
0 g
(\) / \(n_1**)s
0.498 0.498 0 r
(2)s
0 g
( - N**)s
0.498 0.498 0 r
(2)s
0 g
(\)\)\))s
(    )59.5 92.4 ms
0.251 g
(# Figure)59.5 82.4 ms
0 g
(plt.figure\(\))59.5 72.4 ms
0.376 g
(for)59.5 62.4 ms
0 g
( i in )s
F1 sf
0.188 0.188 0.498 r
(range)s
F0 sf
0 g
(\(rhs_modes\):)s
(    plt.plot\(N, MD_rhs + i * np.pi, )59.5 52.4 ms
0.498 0.498 0 r
('#1f77b4')s
0 g
(\))s
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(waveguide_multimode.py                                                        Page 2)59.5 792.4 ms
F0 sf
0.376 g
(for)59.5 772.4 ms
0 g
( i in )s
F1 sf
0.188 0.188 0.498 r
(range)s
F0 sf
0 g
(\()s
F1 sf
0.188 0.188 0.498 r
(len)s
F0 sf
0 g
(\(bwl\)\):)s
(    plt.plot\(N, MD_lhs[i], )59.5 762.4 ms
0.498 0.498 0 r
('#ff7f0e')s
0 g
(\))s
(plt.grid\()59.5 752.4 ms
F1 sf
0.188 0.188 0.498 r
(True)s
F0 sf
0 g
(\))s
(plt.xlabel\()59.5 742.4 ms
0.498 0.498 0 r
(r"$N$")s
0 g
(\))s
(plt.ylabel\()59.5 732.4 ms
0.498 0.498 0 r
(r"phase [rad]")s
0 g
(\))s
(plt.title\()59.5 722.4 ms
0.498 0.498 0 r
(r"Mode dispersion \(")s
0 g
( + pol + )s
0.498 0.498 0 r
("\) for $n_1=$")s
0 g
( + )s
F1 sf
0.188 0.188 0.498 r
(str)s
F0 sf
0 g
(\(n_1\) + )s
0.498 0.498 0 r
(" $n_2=$")s
0 g
(+ )s
F1 sf
0.188 0.188 0.498 r
(str)s
F0 sf
0 g
(\(n_)s
(2\) + )59.5 712.4 ms
0.498 0.498 0 r
(" $\\lambda=$")s
0 g
(+ )s
F1 sf
0.188 0.188 0.498 r
(str)s
F0 sf
0 g
(\(wl\)\))s
(plt.show\(\))59.5 702.4 ms
0.251 g
(# User choose for which "b" to find modes \(look at graph\))59.5 682.4 ms
F1 sf
0.188 0.188 0.498 r
(print)59.5 672.4 ms
F0 sf
0 g
(\()s
0.498 0.498 0 r
("Note: mode dispersion MD_lhs is found for each value of b/wl, in total")s
0 g
(, )s
F1 sf
0.188 0.188 0.498 r
(len)s
F0 sf
0 g
(\()s
(MD_lhs\), )59.5 662.4 ms
0.498 0.498 0 r
("cases.")s
0 g
(\))s
(lhs_b = )59.5 652.4 ms
F1 sf
0.188 0.188 0.498 r
(int)s
F0 sf
0 g
(\()s
F1 sf
0.188 0.188 0.498 r
(input)s
F0 sf
0 g
(\()s
0.498 0.498 0 r
("Choose which MD_lhs \(red curves\) to find intersect points \(1 - ")s
0 g
( )s
(+ )59.5 642.4 ms
F1 sf
0.188 0.188 0.498 r
(str)s
F0 sf
0 g
(\()s
F1 sf
0.188 0.188 0.498 r
(len)s
F0 sf
0 g
(\(MD_lhs\)\) + )s
0.498 0.498 0 r
("\): ")s
0 g
(\)\) - )s
0.498 0.498 0 r
(1)s
0.251 g
(# For each intersection, find their indices in MD_lhs&MD_rhs => can find N for each )59.5 622.4 ms
(mode)59.5 612.4 ms
0 g
(numberOfModes = intersectionsAmount\(MD_lhs[lhs_b], MD_rhs, rhs_modes\))59.5 602.4 ms
(idx = [])59.5 592.4 ms
0.376 g
(for)59.5 582.4 ms
0 g
( i in )s
F1 sf
0.188 0.188 0.498 r
(range)s
F0 sf
0 g
(\(numberOfModes\):)s
(    idx.append\(np.argwhere\(np.diff\(np.sign\(MD_lhs[lhs_b] - \(MD_rhs + np.pi*i\)\)\)\).fla)59.5 572.4 ms
(tten\(\)\))59.5 562.4 ms
(N_mode = [])59.5 552.4 ms
0.376 g
(for)59.5 542.4 ms
0 g
( i in idx:)s
(    N_mode.append\()59.5 532.4 ms
F1 sf
0.188 0.188 0.498 r
(float)s
F0 sf
0 g
(\(N[i]\)\))s
(b = )59.5 522.4 ms
F1 sf
0.188 0.188 0.498 r
(float)s
F0 sf
0 g
(\(bwl[lhs_b] * wl\))s
F1 sf
0.188 0.188 0.498 r
(print)59.5 502.4 ms
F0 sf
0 g
(\()s
0.498 0.498 0 r
(")s
0 0 0.376 r
(\\n)s
0.498 0.498 0 r
(b = ")s
0 g
(, b, )s
0.498 0.498 0 r
("um")s
0 g
(\))s
F1 sf
0.188 0.188 0.498 r
(print)59.5 492.4 ms
F0 sf
0 g
(\()s
0.498 0.498 0 r
("Number of modes:")s
0 g
(, numberOfModes\))s
F1 sf
0.188 0.188 0.498 r
(print)59.5 482.4 ms
F0 sf
0 g
(\()s
0.498 0.498 0 r
("N =")s
0 g
(, N_mode\))s
0.251 g
(############### TRANSVERSAL FIELD COMPONENT ###############)59.5 442.4 ms
(# Henceforth using the N and b found from the mode calculation)59.5 432.4 ms
0 g
(N2 = np.power\(N_mode, )59.5 422.4 ms
0.498 0.498 0 r
(2)s
0 g
(\))s
(K = np.sqrt\(n_1**)59.5 412.4 ms
0.498 0.498 0 r
(2)s
0 g
( - N2\) * )s
0.498 0.498 0 r
(2)s
0 g
( * np.pi / wl         )s
0.251 g
(# diff. eq. solution wave prop. co)s
(nstants)59.5 402.4 ms
0 g
(gamma = np.sqrt\(N2 - n_2**)59.5 392.4 ms
0.498 0.498 0 r
(2)s
0 g
(\) * )s
0.498 0.498 0 r
(2)s
0 g
( * np.pi / wl     )s
0.251 g
(# diff. eq. solution wave prop. co)s
(nstants)59.5 382.4 ms
0 g
(A = )59.5 372.4 ms
0.498 0.498 0 r
(1)s
0 g
(                                             )s
0.251 g
(# diff. eq. solution constant; arb)s
(itrarily chosen for a fitting amplitude)59.5 362.4 ms
0.376 g
(if)59.5 352.4 ms
0 g
( pol == )s
0.498 0.498 0 r
("TM")s
0 g
(:)s
(    C = gamma * A * n_1**)59.5 342.4 ms
0.498 0.498 0 r
(2)s
0 g
( / \(K * n_2**)s
0.498 0.498 0 r
(2)s
0 g
(\)                           )s
0.251 g
(# diff. eq. solu)s
(tion constant)59.5 332.4 ms
0 g
(    D = A * \(K*n_2**)59.5 322.4 ms
0.498 0.498 0 r
(2)s
0 g
(*np.sin\(K*b\) / \(gamma*n_1**)s
0.498 0.498 0 r
(2)s
0 g
(\)\) - np.cos\(K * b\) )s
0.251 g
(# diff. eq. solu)s
(tion constant)59.5 312.4 ms
0.376 g
(elif)59.5 302.4 ms
0 g
( pol == )s
0.498 0.498 0 r
("TE")s
0 g
(:)s
(    C = gamma * A / K                                   )59.5 292.4 ms
(    D = A * \(K * np.sin\(K * b\) / gamma - np.cos\(K * b\)\))59.5 282.4 ms
F1 sf
0.188 0.188 0.498 r
(print)59.5 262.4 ms
F0 sf
0 g
(\()s
0.498 0.498 0 r
(")s
0 0 0.376 r
(\\n)s
0.498 0.498 0 r
(Differential equation solution constants:")s
0 g
(\))s
F1 sf
0.188 0.188 0.498 r
(print)59.5 252.4 ms
F0 sf
0 g
(\()s
0.498 0.498 0 r
("K =")s
0 g
(, K, )s
0.498 0.498 0 r
(")s
0 0 0.376 r
(\\n)s
0.498 0.498 0 r
(gamma =")s
0 g
(, gamma, )s
0.498 0.498 0 r
(")s
0 0 0.376 r
(\\n)s
0.498 0.498 0 r
(A = B =")s
0 g
(, A, )s
0.498 0.498 0 r
("; C =")s
0 g
(, C, )s
0.498 0.498 0 r
("; D =")s
0 g
(, D\))s
0.251 g
(# For each mode, solve fieldTransv and store in fieldTransv[mode])59.5 232.4 ms
0 g
(x = np.linspace\(-)59.5 222.4 ms
0.498 0.498 0 r
(2)s
0 g
(*b, )s
0.498 0.498 0 r
(3)s
0 g
(*b, P\)                       )s
0.251 g
(# x position)s
0 g
(fieldTransv = np.zeros\(\(numberOfModes, )59.5 212.4 ms
F1 sf
0.188 0.188 0.498 r
(len)s
F0 sf
0 g
(\(x\)\)\)     )s
0.251 g
(# transversal field, E_y \(if TE\))s
( or H_y \(if TM\))59.5 202.4 ms
0.376 g
(for)59.5 192.4 ms
0 g
( mode in )s
F1 sf
0.188 0.188 0.498 r
(range)s
F0 sf
0 g
(\(numberOfModes\):)s
(    index = )59.5 182.4 ms
0.498 0.498 0 r
(0)s
0 g
(    )59.5 172.4 ms
0.376 g
(for)s
0 g
( X in x: )s
(        )59.5 162.4 ms
0.376 g
(if)s
0 g
( X < )s
0.498 0.498 0 r
(0)s
0 g
(:)s
(            fieldTransv[mode][index] = A*np.exp\(gamma[mode]*X\))59.5 152.4 ms
(        )59.5 142.4 ms
0.376 g
(elif)s
0 g
( X >= )s
0.498 0.498 0 r
(0)s
0 g
( and X <= b:)s
(            fieldTransv[mode][index] = A*np.cos\(K[mode]*X\) + C[mode]*np.sin\(K[mode]*)59.5 132.4 ms
(X\))59.5 122.4 ms
(        )59.5 112.4 ms
0.376 g
(elif)s
0 g
( X > b:)s
(            fieldTransv[mode][index] = D[mode]*np.exp\(-gamma[mode]*\(X - b\)\))59.5 102.4 ms
(        )59.5 92.4 ms
0.376 g
(else)s
0 g
(:)s
(            )59.5 82.4 ms
F1 sf
0.188 0.188 0.498 r
(print)s
F0 sf
0 g
(\()s
0.498 0.498 0 r
("Invalid x value when attempting to calculate fieldTransv: x =")s
0 g
(, i)s
(\))59.5 72.4 ms
(            sys.exit\()59.5 62.4 ms
0.498 0.498 0 r
("Exiting program.")s
0 g
(\))s
(        index = index + )59.5 52.4 ms
0.498 0.498 0 r
(1)s
re sp
%%PageTrailer
%%Page: 3 3
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(waveguide_multimode.py                                                        Page 3)59.5 792.4 ms
F0 sf
0.251 g
(# Normalize)59.5 762.4 ms
0 g
(fieldTransv = fieldTransv / np.max\(fieldTransv\))59.5 752.4 ms
(    )59.5 742.4 ms
0.251 g
(# Figure)59.5 732.4 ms
0 g
(fieldlimit = [-np.max\(fieldTransv[)59.5 722.4 ms
0.498 0.498 0 r
(0)s
0 g
(]\), np.max\(fieldTransv[)s
0.498 0.498 0 r
(0)s
0 g
(]\)])s
(plt.figure\(\))59.5 712.4 ms
0.376 g
(for)59.5 702.4 ms
0 g
( mode in )s
F1 sf
0.188 0.188 0.498 r
(range)s
F0 sf
0 g
(\(numberOfModes\):)s
(    plt.plot\(fieldTransv[mode], x, label=)59.5 692.4 ms
0.498 0.498 0 r
("m = ")s
0 g
( + )s
F1 sf
0.188 0.188 0.498 r
(str)s
F0 sf
0 g
(\(mode\)\))s
(plt.plot\(fieldlimit, [)59.5 682.4 ms
0.498 0.498 0 r
(0)s
0 g
(, )s
0.498 0.498 0 r
(0)s
0 g
(], )s
0.498 0.498 0 r
('k')s
0 g
(, linewidth=)s
0.498 0.498 0 r
(1.5)s
0 g
(\))s
(plt.plot\(fieldlimit, [b, b], )59.5 672.4 ms
0.498 0.498 0 r
('k')s
0 g
(, linewidth=)s
0.498 0.498 0 r
(1.5)s
0 g
(\))s
(plt.grid\()59.5 662.4 ms
F1 sf
0.188 0.188 0.498 r
(True)s
F0 sf
0 g
(\))s
(plt.xlim\(fieldlimit\))59.5 652.4 ms
0.376 g
(if)59.5 642.4 ms
0 g
( pol == )s
0.498 0.498 0 r
("TM")s
0 g
(:)s
(    plt.xlabel\()59.5 632.4 ms
0.498 0.498 0 r
(r"$H_y$ [a.u]")s
0 g
(\))s
0.376 g
(elif)59.5 622.4 ms
0 g
( pol == )s
0.498 0.498 0 r
("TE")s
0 g
(:)s
(    plt.xlabel\()59.5 612.4 ms
0.498 0.498 0 r
(r"$E_y$ [a.u]")s
0 g
(\))s
(plt.ylabel\()59.5 602.4 ms
0.498 0.498 0 r
(r"$x$ [$\\mu$m]")s
0 g
(\))s
(plt.title\()59.5 592.4 ms
0.498 0.498 0 r
(r"b = ")s
0 g
( + )s
F1 sf
0.188 0.188 0.498 r
(str)s
F0 sf
0 g
(\(b\) + )s
0.498 0.498 0 r
(")s
0 0 0.376 r
(\\n)s
0.498 0.498 0 r
(N = ")s
0 g
( + )s
F1 sf
0.188 0.188 0.498 r
(str)s
F0 sf
0 g
(\(np.around\(N_mode, )s
0.498 0.498 0 r
(4)s
0 g
(\)\)\))s
(plt.legend\(\))59.5 582.4 ms
(plt.show\(\))59.5 572.4 ms
(      )59.5 562.4 ms
(      )59.5 532.4 ms
(      )59.5 522.4 ms
(      )59.5 512.4 ms
(      )59.5 502.4 ms
re sp
%%PageTrailer
%%Trailer
%%Pages: 3
%%EOF
